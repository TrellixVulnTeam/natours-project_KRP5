.row {
  // standard that it used these days  1140 pixel grid -
  // 10 pixels = 1rem
  max-width: $grid-width; // we need max-width not width
  // that means if we have  enough available space then it will have the width that we specified but if there is not enough width .If the viewport is smaller than the width
  // we specified here in this case if the viewpor is smaller than 114 rem then it will simply fill 100% of the available space
  background-color: #eee;
  margin: 0 auto; // trick to center the row in the viewport

  // .row:not()
  &:not(:last-child) {
    // we select everything except last child  because we dont want to apply margin in the last row
    margin-bottom: $gutter-vertical; //apply it to everything except last child
  }

   @include clearfix;

   [class^="col-"] {// it will select all the elements in which the clas attribute starts with col-   --    ^ --> allows us to select all the classes that start with col- //  * --> select any class which contain this part col- //   $ --> any class that ends with col-
    background-color: orangered;               
    float:left; // when we use float on child elements automatically this row has zero pixel height. The height it collapses. In these cases we use clearfix hack

    &:not(:last-child) {
        margin-right: $gutter-horizontal;   //apply it to everything except last column for gap
      }                                                                                            
   }    

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2); // calculate the width of the columns // to use scss variable inside calc we need to wrap it inside #{}    // in .col-1-of-2 the gutter will be the margin of the first column
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  } 

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  } 
  
  
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  } 

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  } 

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  } 
}
